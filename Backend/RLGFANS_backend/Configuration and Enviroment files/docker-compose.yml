version: '3.8'

services:
  # Backend service for RLG Fans
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/rlg_fans_data
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_URL=redis://redis:6379/0
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - MAIL_SERVER=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USE_TLS=True
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - SENTRY_DSN=${SENTRY_DSN}
    depends_on:
      - db
      - redis

  # Frontend service for RLG Fans
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend

  # PostgreSQL Database service
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=rlg_fans_data
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  # Redis for caching and Celery task queue
  redis:
    image: redis:6
    ports:
      - "6379:6379"

  # Celery worker for handling asynchronous tasks
  celery_worker:
    build:
      context: ./backend
    command: celery -A app.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@db:5432/rlg_fans_data
    depends_on:
      - backend
      - redis

  # Flower for Celery task monitoring
  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - celery_worker

  # Kafka for handling large data processing and streaming
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  # Zookeeper as a Kafka dependency
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

volumes:
  db_data:
